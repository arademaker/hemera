##################################################
# file: HemeraService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/local/bin/wsdl2py HemeraService.wsdl
# 
##################################################


import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class HemeraServiceLocator:
    HemeraPort_address = "http://localhost:8080/HemeraService"
    def getHemeraPortAddress(self):
        return HemeraServiceLocator.HemeraPort_address
    def getHemeraPort(self, url=None, **kw):
        return HemeraBindingSOAP(url or HemeraServiceLocator.HemeraPort_address, **kw)

# Methods
class HemeraBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: prove
    def prove(self, request, **kw):
        if isinstance(request, proveRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://localhost:8080/HemeraService/prove", **kw)
        # no output wsaction
        response = self.binding.Receive(proveResponse.typecode)
        return response

class proveRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        formula -- part formula
        """
        self._formula =  kw.get("formula")
proveRequest.typecode = Struct(pname=("http://localhost:8080/HemeraService","prove"), ofwhat=[ZSI.TC.String(pname="formula", aname="_formula", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=proveRequest, encoded="http://localhost:8080/HemeraService")

class proveResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        return -- part return
        """
        self._return =  kw.get("return")
proveResponse.typecode = Struct(pname=("http://localhost:8080/HemeraService","proveResponse"), ofwhat=[ZSI.TC.String(pname="return", aname="_return", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=proveResponse, encoded="http://localhost:8080/HemeraService")
