

fmod GRAPH is 

 sort Graph Node Edge .

 op e : Node Node Attrs -> Edge .
 op n : Node Attrs -> Node .

 op _;_ : EdgeList EdgeList -> EdgeList [assoc] .

 op [_|_] : Node EdgeList -> AdjList .

 op <_|_> : NodeList AdjList -> Graph .


 op get : Key Map -> Value .
 op set : Key Value Map -> Map .


 ceq get-edges( < NL | e(N1,N2,AT) EL >, (k,v) ) = 
     if AT contains (k,v) then 
        


 eq get-childs(N, G, pair) =  get-source( get-edges(G, pair) ) .



 ceq add-child(< N NL | [ N | EL ] AL>, N1, M:Map) = 
    graph(N NL, < N | EL e > AL) .
  if 
   e := e(N, N1, M:Map) .



    